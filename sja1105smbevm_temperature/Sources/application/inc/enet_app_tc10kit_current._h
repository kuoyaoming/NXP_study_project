/*
 * Copyright 2017-2018 NXP
 * All rights reserved.
 *
 * THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef APPLICATION_INC_ENET_APP_H_
#define APPLICATION_INC_ENET_APP_H_

#include <stdint.h>
#include <stdbool.h>

#define ENETTASK_FEATURE_TC10	    (1<<0)
#define ENETTASK_FEATURE_TC10_DEMO	(1<<1)
#define ENETTASK_FEATURE_SENDPKT    (1<<2)

typedef struct {
  uint8_t    switchConfigNumber;
  uint8_t    enettask_featureFlags;
} SJA1105SMBEVM_ENETTASK_DEFS;


extern void enet_task( void *parameters );
extern void enet_sleep_button_handler(bool newState);
extern void enet_diag_button_handler(bool newState);

#endif /* APPLICATION_INC_ENET_APP_H_ */
