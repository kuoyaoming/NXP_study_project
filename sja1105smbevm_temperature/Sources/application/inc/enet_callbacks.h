/*
 * Copyright 2017-2018 NXP
 * All rights reserved.
 *
 * THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef APPLICATION_INC_ENET_CALLBACKS_H_
#define APPLICATION_INC_ENET_CALLBACKS_H_

#include <stdint.h>

typedef struct {
    uint8_t     pktnumber;				/* latest pkt number of a mirrored packet */
    uint8_t     ctr;					/* ISR increments ctr as soon as it writes pktnumber */
    uint16_t    type;
    uint32_t    src;
    uint32_t    dst;
} enet_callbacks_mirrlog_t;


extern enet_callbacks_mirrlog_t enet_sw_rcvlog, enet_dbg_rcvlog;

#endif /* APPLICATION_INC_ENET_CALLBACKS_H_ */
